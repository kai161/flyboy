<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       	             http://www.springframework.org/schema/mvc
	                 http://www.springframework.org/schema/mvc/spring-mvc.xsd
	                 http://www.springframework.org/schema/context
	                 http://www.springframework.org/schema/context/spring-context.xsd
	                 http://www.springframework.org/schema/task
	                 http://www.springframework.org/schema/task/spring-task.xsd
	                 http://www.springframework.org/schema/cache
	                 http://www.springframework.org/schema/cache/spring-cache.xsd
       ">

       <context:component-scan base-package="com.nk.flyboy"></context:component-scan>
       <mvc:annotation-driven>
           <!--responsebody 支持多种返回类型-->
           <mvc:message-converters>
               <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
               <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
           </mvc:message-converters>
       </mvc:annotation-driven>

       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
              <property name="prefix" value="/WEB-INF/views/"></property>
              <property name="suffix" value=".jsp"></property>
       </bean>

       <!--静态资源配置-->
       <mvc:resources mapping="/static/**" location="/static/"></mvc:resources>

       <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath*:jdbc.properties</value>
                     </list>
              </property>
       </bean>

       <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
              <property name="driverClassName" value="${jdbc.driverClassName}"></property>
              <property name="url" value="${jdbc.url}"></property>
              <property name="username" value="${jdbc.username}"></property>
              <property name="password" value="${jdbc.password}"></property>
       </bean>


       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="dataSource"></property>
              <property name="configLocation" value="classpath:MyBatis-Configuration.xml"></property>
              <property name="mapperLocations" value="classpath:SqlMapper/*.xml"></property>
       </bean>

       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
              <property name="basePackage" value="com.nk.flyboy.dao.mapper"></property>
       </bean>

       <!--定时任务配置 pool-size表示一次可用的线程数，若同一时间要执行的任务数>pool-size,则只有随机的pool-size个任务会执行 -->
       <task:annotation-driven scheduler="flyboyjob" mode="proxy"></task:annotation-driven>
       <task:scheduler id="flyboyjob" pool-size="6"></task:scheduler>

       <!--添加过滤器-->
       <mvc:interceptors>
              <bean class="com.nk.flyboy.web.interceptor.SqlFilterInterceptor"></bean>
       </mvc:interceptors>

       <!--配置Spring-EhCache-->
       <cache:annotation-driven cache-manager="cacheManager" ></cache:annotation-driven>
       <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
              <property name="cacheManager" ref="cacheManagerFactory"></property>
       </bean>
       <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
              <property name="configLocation" value="classpath:ehcache.xml"></property>
       </bean>
       <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration" >
              <property name="master">
                     <bean class="org.springframework.data.redis.connection.RedisNode">
                            <property name="name" value="mymaster"></property>
                     </bean>
              </property>
              <property name="sentinels">
                     <set>
                            <bean class="org.springframework.data.redis.connection.RedisNode">
                                   <constructor-arg index="0" value="192.168.177.130"></constructor-arg>
                                   <constructor-arg index="1" value="26370"></constructor-arg>
                            </bean>
                            <bean class="org.springframework.data.redis.connection.RedisNode">
                                   <constructor-arg index="0" value="192.168.177.130"></constructor-arg>
                                   <constructor-arg index="1" value="26380"></constructor-arg>
                            </bean>
                            <bean class="org.springframework.data.redis.connection.RedisNode">
                                   <constructor-arg index="0" value="192.168.177.130"></constructor-arg>
                                   <constructor-arg index="1" value="26390"></constructor-arg>
                            </bean>
                     </set>
              </property>
       </bean>

       <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
              <!--没有配置jedisPool时一定要添加该属性-->
              <property name="usePool" value="false"></property>
              <property name="hostName" value="192.168.177.130"></property>
              <property name="port" value="6390"></property>
              <property name="timeout" value="12000"></property>
              <constructor-arg ref="redisSentinelConfiguration"></constructor-arg>
       </bean>
       <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
              <constructor-arg name="connectionFactory" ref="jedisConnFactory"></constructor-arg>
       </bean>

</beans>